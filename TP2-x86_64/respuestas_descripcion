Nombre: Mateo Bramer Markovic
Mail: bramermarkovicm@udesa.edu.ar
--------------------------------------------------------------------------------------------------------------------------
fase 1:

lea    rsi,[rip+0xc7c62]   # 0x4c9a58 
call   0x402311 <strings_not_equal>
lee lo que está en # 0x4c9a58 y lo compara con lo que yo le pase
por ende busco lo que está en # 0x4c9a58 

x/s 0x4c9a58 : La ingratitud es hija de la soberbia.

--------------------------------------------------------------------------------------------------------------------------

Fase 2;

mov eax, ebx      
imul eax, ebp     
test eax, eax       
je explode_bomb     ; si a * b == 0 → explota

a y b son números y no pueden ser 0 ninguno

add ebx, ebp        
cmp ebx, 0x5d47     
jne explode_bomb

la suma de a y b tiene que ser 0x5d47, en decimal 23879
Ahora entra a una función misterio
xor    edi,edi
js     0x401e21 <misterio+22>

si xor edi, edi es negativo no explota la bomba.
entonces a xor b también tiene que ser negativo

Entonces se que mi input son dos numeros, a b
Ninguno puede ser 0 
a xor b = negativo 
Un par posible es a = -1, b = 23880

----------------------------------------------------------------------------------------------------------------------

Fase 3:
lea    rsi,[rip+0xc502b]        # 0x4c7099
me fijo lo que está en  # 0x4c7099
0x4c7099:       "%s %d"

cmp    DWORD PTR [rsp+0x14], 0x6 
jle    0x402121  

si mi segundo input es menor que 6, explota

mi primer input es una string y el segundo un entero mayor estricto que 6

entro a ver la función readlines
lea    rsi,[rip+0xc5846]        # 0x4c7723
lea    rdi,[rip+0xc51a8]        # 0x4c708c
call   0x410b00 <fopen64>
me fijo que hay en  # 0x4c7723 y # 0x4c708c

esto me da:
r, palabras.txt
entonces lee el archivo palabras.txt

Ahora me fijo que está en la función Cuenta

xor ebx, ecx       
sar ebx, 1         
and eax, ecx       
add ebx, eax       

Esto se usa para calcular el punto medio de dos números (busqueda binaria)

mov eax, DWORD PTR [r8]  
add eax,0x1
cmp eax,0xb              
jg  explode_bomb

Va actualizando un contador y si se pasa de 11 explota

mov rsi, [r15 + rbx*8]  
mov rdi, r14           
call strcmp
busca el punto medio de palabras.txt y lo compara con lo que yo pase, si son iguales sale

La clave de fase 3 termina siendo dos parámetros , A - B. A debe ser una palabra que está dentro del archivo palabras.txt y B tiene que ser el numero de iteraciones que tarda en encontrar a “a” haciendo una busquedad binario sobre palabras.txt, y debe estar entre [7,11].

Encontre un ejemplo haciendo una busquedad por mi cuenta por cada palabra en palabras.txt hasta encontrar una que funcione
Un ejemplo podria ser: A = abajar, B = 11

